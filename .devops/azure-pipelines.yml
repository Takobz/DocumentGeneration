trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  resourceGroupName: 'student-training'
  serviceConnection: 'student-training'
  webAppName: 'student-training' 

stages:
- stage: BuildAndPublish
  displayName: BuildAndPublish
  jobs:
  - job: DeployInfra
    steps:
    - bash: az bicep build --file "infra/main.bicep" --outfile "infra/main.json"
      displayName: Transiple Bicep to ARM

    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: Resource Group
        action: Create Or Update Resource Group
        location: 'South Africa North'
        azureResourceManagerConnection:  $(serviceConnection)
        resourceGroupName: $(resourceGroupName)
        csmFile: 'infra/main.json'
        deploymentMode: Incremental
        templateLocation: Linked artifact
        overrideParameters: >-
          -webAppName $(webAppName)
      displayName: Override Parameters

  - job: BuildAndDeployCode
    dependsOn: DeployInfra
    steps:
    - task: DotNetCoreCLI@1
      inputs:
        command: build
      displayName: Build

    - task: DotNetCoreCLI@1
      inputs:
        command: publish
        arguments: --configuration release --output publishPackage
        zipAfterPublish: true
      displayName: dotnet publish

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: $(System.DefaultWorkingDirectory)/publishPackage.zip
        ArtifactName: 'publishPackage'
      displayName: Publish Artifact

- stage: DeployWebApp
  dependsOn: BuildAndPublish
  displayName: Deploy Web API Code
  jobs:
  - job: DownloadPackageAndDeploy
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: 'publishPackage'
          path: $(System.DefaultWorkingDirectory)
      
      - task: AzureRmWebAppDeployment@4
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: $(serviceConnection)
          appType: 'webAppLinux'
          WebAppName: 'wapp-student-training'
          ResourceGroupName: $(resourceGroupName)
          packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'